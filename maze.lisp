(in-package "flee-the-deep")

(defun get-orientation (width height)
  (cond
    ((< width height) 'horizontal)
    ((< height width) 'vertical)
    (t (if (= 0 (random 2))
           'horizontal
           'vertical))))

(defun gen-maze (map-arr x y width height resolution floor-tile wall-tile)
  (when (or (<= width resolution)
            (<= height resolution))
    (return-from gen-maze))
  (let* ((orientation (get-orientation width height))
         (wall-x (+ x (if (eq orientation 'horizontal)
                          (random (- width resolution))
                          0)))
         (wall-y (+ y (if (eq orientation 'vertical)
                          (random (- height resolution))
                          0)))
         (door-x (+ x (if (eq orientation 'vertical)
                          (random width)
                          0)))
         (door-y (+ y (if (eq orientation 'horizontal)
                          (random height)
                          0)))
         (dx (if (eq orientation 'horizontal) 0 1))
         (dy (if (eq orientation 'horizontal) 1 0))
         (wall-length (if (eq orientation 'horizontal) height width)))
    ;; draw the wall
    (dotimes (i wall-length)
      (setf (aref map-arr wall-x wall-y) wall-tile)
      (incf wall-x dx)
      (incf wall-y dy))
    ;; put in the door
    (setf (aref map-arr door-x door-y) floor-tile)
    ;; Split up the new sections
    (let ((nx x)
          (ny y)
          (nwidth (if (eq orientation 'horizontal)
                      (- wall-x x 1)
                      width))
          (nheight (if (eq orientation 'horizontal)
                       height
                       (- wall-y y 1))))
      (gen-maze map-arr nx ny nwidth nheight resolution floor-tile wall-tile))
    (let ((nx (if (eq orientation 'horizontal)
                  (+ wall-x 1)
                  x))
          (ny (if (eq orientation 'horizontal)
                  y
                  (+ wall-y 1)))
          (nwidth (if (eq orientation 'horizontal)
                      (- (+ x width) wall-x 1)
                      width))
          (nheight (if (eq orientation 'horizontal)
                       height
                       (- (+ y height) wall-y 1))))
      (gen-maze map-arr nx ny nwidth nheight resolution floor-tile wall-tile))))
